                                                                  DATA-TYPES
-----> DATA-TYPE ( Numbers)
 
 → var x = 10;
 → var x = 10.12;
 
----> --strings--
 → var demo = “ this is a string”;
 
----> --Boolean--
 → var truth = true;
 
----> --Array--
 → var demo = [" XSS", “CSRF”, “SQLI”]
 → car demo = new Array("XSS", “CSRF”, “SQLI”]
 → var demo = new Array()
      demo[0] = “XSS”
      
---->--Objects--
→ Properties - value/data
→ Methods - Associated Actions
→ e.g Vulnerability Object
    -- CVE Number is Property
    -- Isvulnerable() is a mathod 
→ JS is Prototype Based
   -- no access like in other Object Oriented Language . 

---> --Accessing Object Properties & Methods --
→ Object_name.Property_name
→ Object_name.Method_name(arg)


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<html>
		<body>
				<script>


				function Vulnerable(description, cveid){
					this.description = description;
					this.cveid = cveid;
				}

				var vuln1 = new Vulnerable("XSS in PHBB", 1234);
				alert(vuln1.description);
				alert(vuln1.cveid);

				</script>
		</body>
</html>

//-- this will create a function with two objects description and cveid and we can define the variable vuln1
to show the vulerability and their detail when ever we needed --//
//-- lets apply methon : associated action to this --//

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<html>
		<body>
				<script>


				function Vulnerable(description, cveid){
					this.description = description;
					this.cveid = cveid;

					this.alertVulnerabilityDetails = function (){

						alert(this.description + ' : ' + ' +this.cveid);
					}
				}

				var vuln1 = new Vulnerable("XSS in PHBB", 1234);
				vuln1.alertVulnerabilityDetails();
			
				</script>
		</body>
</html>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
///--this will show the vulnerablity and the description the same/single/one popup alert--
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

 

 
 
